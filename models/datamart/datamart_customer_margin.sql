{{
  config(
    materialized = "table"
  )
}}

WITH DIRECT_REVENUE AS (

	-- ALL INCOME per month per customer
	SELECT dd.MONTH_FIRST_DAY									AS DATE_KEY
		, IFNULL(COMPANY_ID, -1)								AS COMPANY_ID
		, sum(RECURRING_AMOUNT)									AS RECURRING_REVENUE
		, sum(NON_RECURRING_AMOUNT)								AS NONRECURRING_REVENUE
	FROM  {{ ref('core_fact_revenue_invoiced') }} fri
	LEFT JOIN {{ ref('core_dim_date') }} dd USING (DATE_KEY)
	LEFT JOIN {{ ref('core_dim_company') }} cdc USING (COMPANY_SK)
	WHERE PAID_INDICATOR = TRUE
		AND dd.MONTH_FIRST_DAY >= '2021-08-01'
	GROUP BY dd.MONTH_FIRST_DAY
		, IFNULL(COMPANY_ID, -1)

)
, DIRECT_PEX AS (

	-- ALL DIRECT Hubspot costs per month and customer
	SELECT IFF(cdc.COMPANY_START_DATE IS NULL, -1, IFNULL(cdc.COMPANY_ID, -1))	AS COMPANY_ID
		, cdc.COMPANY_START_DATE IS NULL 										AS NO_DEAL_INDICATOR
		, dd.MONTH_FIRST_DAY													AS DATE_KEY
		, sum(HOURS_TOTAL) 														AS DIRECT_PEX_HOURS
		, sum(COST_TOTAL ) 														AS DIRECT_PEX_COSTS
	FROM {{ ref('datamart_customer_costs') }} dcc
	LEFT JOIN {{ ref('core_dim_date') }} dd USING (DATE_KEY)
	LEFT JOIN {{ ref('core_dim_company') }} cdc USING (COMPANY_SK)
	WHERE dd.MONTH_FIRST_DAY >= '2021-08-01' AND dd.MONTH_FIRST_DAY <= CURRENT_DATE()
	GROUP BY IFF(COMPANY_START_DATE IS NULL, -1, IFNULL(COMPANY_ID, -1))
		, COMPANY_START_DATE IS NULL
		, MONTH_FIRST_DAY

)
, DIRECT_S2_AZURE AS (

	-- ALL Direct Azure Solytic 2.0 costs & usage per month per customer
	SELECT IFNULL(COMPANY_ID, -1)						AS COMPANY_ID
		, DATE_KEY
		, COSTS_Processing * PERC_PROCESSING_TIME 		AS DIRECT_S2_PROCESSING
		, COSTS_Data_storage * PERC_STORAGE_DATA 		AS DIRECT_S2_STORAGE_DATA
		, DIRECT_S2_PROCESSING + DIRECT_S2_STORAGE_DATA AS DIRECT_S2_TOTAL
	FROM {{ ref('core_fact_azure_costs') }} sfac
	LEFT JOIN  (

		SELECT IFNULL(COMPANY_ID, -1)									AS COMPANY_ID
			, DATE_KEY
			, PROCESSING_TIME_SEC
			, SUM(PROCESSING_TIME_SEC) OVER( PARTITION BY DATE_KEY) 	AS TOTAL_PROCESSING_TIME_SEC
			, DIV0(PROCESSING_TIME_SEC,TOTAL_PROCESSING_TIME_SEC)	 	AS PERC_PROCESSING_TIME
			, STORAGE_DATA_GB
			, SUM(STORAGE_DATA_GB) OVER( PARTITION BY DATE_KEY)			AS TOTAL_STORAGE_DATA_GB
			, DIV0(STORAGE_DATA_GB,TOTAL_PROCESSING_TIME_SEC)  			AS PERC_STORAGE_DATA
		FROM (
			SELECT IFF(COMPANY_START_DATE IS NULL, -1, IFNULL(COMPANY_ID, -1))	AS COMPANY_ID
				,dd.MONTH_FIRST_DAY												AS DATE_KEY
				,SUM(PROCESSING_DURATION_SEC)									AS PROCESSING_TIME_SEC
				,SUM(DATA_SIZE_GB) 												AS STORAGE_DATA_GB
			FROM {{ ref('core_fact_site_ingestions') }} fpe
			LEFT JOIN {{ ref('core_dim_date') }} 		dd  USING (DATE_KEY)
			LEFT JOIN {{ ref('core_dim_company') }} 	cdc USING (COMPANY_SK)
			GROUP BY IFF(COMPANY_START_DATE IS NULL, -1, IFNULL(COMPANY_ID, -1))
				,dd.MONTH_FIRST_DAY
			) A

		) u USING (DATE_KEY)


)
, TOTAL_DIRECT_COSTS AS (

	SELECT IFNULL(COMPANY_ID, -1)										AS COMPANY_ID
		, DATE_KEY
		, no_deal_indicator
		, DIRECT_PEX_COSTS	* -1										AS DIRECT_PEX_COSTS
		, DIRECT_S2_TOTAL	* -1										AS DIRECT_S2_TOTAL
		-- NOTE: Total cost needed later on
		, SUM(DIRECT_S2_TOTAL) OVER (PARTITION BY COMPANY_ID, DATE_KEY) AS DIRECT_S2_COST
	FROM DIRECT_PEX dcc
	-- ONLY INCLUDE SOLYTIC 2.0 CUSTOMERS = INNER JOIN
	FULL JOIN DIRECT_S2_AZURE ap USING (COMPANY_ID , DATE_KEY)

)

-- START COMPANY RATIO
, SITES_PER_COMPANY AS (

	SELECT COMPANY_ID
		, MONTH_FIRST_DAY																	AS DATE_KEY
		, IFF(S1_INDICATOR = 1, SUM(S1_INDICATOR) OVER (PARTITION BY MONTH_FIRST_DAY), 0) 	AS S1_MONTH
		, IFF(S2_INDICATOR = 1, SUM(S2_INDICATOR) OVER (PARTITION BY MONTH_FIRST_DAY), 0) 	AS S2_MONTH
		, COUNT(COMPANY_ID) OVER (PARTITION BY MONTH_FIRST_DAY) 							AS TOTAL_COMPANIES
		, S1_SITES
		, S2_SITES
		, S1_SITES + S2_SITES																AS TOTAL_SITES
	FROM (

		SELECT COMPANY_ID
			, COMPANY_START_DATE
			, COMPANY_END_DATE
			, cdc.SOLYTIC_1_0_INDICATOR  :: int 			AS  S1_INDICATOR
			, cdc.SOLYTIC_2_0_INDICATOR  :: int 			AS  S2_INDICATOR
			, IFNULL(cdc.ACTUAL_SOLYTIC_1_SITES ,0)  		as S1_SITES
			, IFNULL(cdc.ACTUAL_SOLYTIC_2_SITES ,0)  		as S2_SITES
		FROM {{ ref('core_dim_company') }} cdc
		WHERE COMPANY_ID IS NOT NULL
			AND COMPANY_START_DATE IS NOT NULL
			AND (cdc.SOLYTIC_1_0_INDICATOR  :: int = TRUE
				or cdc.SOLYTIC_2_0_INDICATOR  :: int = TRUE)

		) cd
	LEFT JOIN (
		SELECT DISTINCT MONTH_FIRST_DAY
		FROM {{ ref('core_dim_date') }}
		) dd ON dd.MONTH_FIRST_DAY BETWEEN cd.COMPANY_START_DATE AND IFF(cd.COMPANY_END_DATE > CURRENT_DATE(), CURRENT_DATE(), cd.COMPANY_END_DATE)
	WHERE MONTH_FIRST_DAY >= '2021-08-01'

)
-- END COMPANY RATIO

, TOTAL_INDIRECT_COSTS AS (

	--	SET MINIMUM_RATIO = 0.3

	SELECT DATE_KEY
		, COMPANY_ID
		, DIV0(S1_SITES,SUM(S1_SITES) OVER (PARTITION BY DATE_KEY))		AS S1_RATIO_SITE
		, DIV0(INDIRECT_SOLYTIC1 , s.S1_MONTH) * 0.3					AS S1_COST_MINIMUM
		, (INDIRECT_SOLYTIC1 *(1 -  0.3)) * S1_RATIO_SITE				AS S1_COST_RATIO
		, ROUND(S1_COST_MINIMUM + S1_COST_RATIO)						AS INDIRECT_S1
		, DIV0(S2_SITES,SUM(S2_SITES) OVER (PARTITION BY DATE_KEY))		AS S2_RATIO_SITE
		, DIV0(INDIRECT_SOLYTIC2 , s.S2_MONTH) * 0.3					AS S2_COST_MINIMUM
		, (INDIRECT_SOLYTIC2 *(1 -  0.3)) * S2_RATIO_SITE				AS S2_COST_RATIO
		, ROUND(S2_COST_MINIMUM + S2_COST_RATIO)						AS INDIRECT_S2
		, DIV0(TOTAL_SITES,SUM(TOTAL_SITES) OVER (PARTITION BY DATE_KEY))	AS MISC_RATIO_SITE
		, DIV0(INDIRECT_MISC , s.TOTAL_COMPANIES) * 0.3					AS MISC_COST_MINIMUM
		, (INDIRECT_MISC *(1 -  0.3)) * MISC_RATIO_SITE					AS MISC_COST_RATIO
		, ROUND(MISC_COST_MINIMUM + MISC_COST_RATIO)					AS INDIRECT_MISC
		, DIV0(INDIRECT_PEX , s.TOTAL_COMPANIES) * 0.3					AS PEX_COST_MINIMUM
		, (INDIRECT_PEX *(1 -  0.3)) * MISC_RATIO_SITE					AS PEX_COST_RATIO
		, ROUND(PEX_COST_MINIMUM + PEX_COST_RATIO)						AS INDIRECT_PEX
	FROM SITES_PER_COMPANY s
	LEFT JOIN (

		SELECT DISTINCT dd.MONTH_FIRST_DAY AS DATE_KEY
			,IFNULL(SUM(IFF(ACCOUNTING_CATEGORY = 'Personnel expenses', GROSS_AMOUNT * - 1, NULL)) - IN_DIRECT_C + DIRECT_PEX_C, 0) AS INDIRECT_PEX
			,SUM(IFF(cddc.DEBTORS_CREDITORS_NAME = 'Hetzner Online GmbH', (NET_AMOUNT * IFF(CREDIT_DEBIT = 'D', 1, - 1)), 0)) 		AS INDIRECT_SOLYTIC1
			,SUM(IFF(cddc.DEBTORS_CREDITORS_NAME = 'Microsoft Deutschland GmbH'
				AND lower(LINE_ITEM_DESCRIPTION) LIKE '%azure%', (NET_AMOUNT * IFF(CREDIT_DEBIT = 'D', 1, - 1)), 0)) + DIRECT_S2_C 	AS INDIRECT_SOLYTIC2
			,SUM(GROSS_AMOUNT * IFF(CREDIT_DEBIT = 'D', 1, - 1))
				- (INDIRECT_SOLYTIC1 + INDIRECT_SOLYTIC2 + INDIRECT_PEX)
				+ (DIRECT_S2_C + DIRECT_PEX_C) 																						AS INDIRECT_MISC
			,SUM(GROSS_AMOUNT * IFF(CREDIT_DEBIT = 'D', 1, - 1)) 																	AS TOTAL_COSTS
		FROM {{ ref('core_fact_expenses_invoiced') }}		cfei
		LEFT JOIN {{ ref('core_dim_debtor_creditor') }} 	cddc USING (DEBTORS_CREDITORS_ID)
		LEFT JOIN {{ ref('core_dim_date') }} dd USING (DATE_KEY)
		LEFT JOIN (

			SELECT DATE_KEY
				, IFNULL(SUM(IFF(COMPANY_ID = -1, 0, DIRECT_PEX_COSTS)),0)*-1 									AS DIRECT_PEX_C
				, IFNULL(SUM(IFF(COMPANY_ID = -1, 0, DIRECT_S2_COST)),0) 										AS DIRECT_S2_C
				, SUM(IFF(COMPANY_ID = -1, IFNULL(DIRECT_S2_COST,0) + IFNULL((DIRECT_PEX_COSTS * -1),0), 0)) 	AS IN_DIRECT_C
			FROM TOTAL_DIRECT_COSTS
			GROUP BY DATE_KEY

			)tdc ON dd.MONTH_FIRST_DAY = tdc.Date_KEY
		WHERE dd.MONTH_FIRST_DAY >= '2021-08-01'
		GROUP BY dd.MONTH_FIRST_DAY
			, DIRECT_PEX_C
			, DIRECT_S2_C
			, IN_DIRECT_C

		) ic  USING (DATE_KEY)

)


SELECT COALESCE(CDC.COMPANY_SK, -1) 		AS COMPANY_SK
	, COALESCE(dr.DATE_KEY, tdc.DATE_KEY, tic.DATE_KEY) 			AS DATE_KEY
	, dr.RECURRING_REVENUE
	, dr.NONRECURRING_REVENUE
	, IFF(COALESCE(dr.COMPANY_ID, tdc.COMPANY_ID, tic.COMPANY_ID) = -1, 0, tdc.DIRECT_PEX_COSTS)		AS DIRECT_PEX_COSTS
	, IFF(COALESCE(dr.COMPANY_ID, tdc.COMPANY_ID, tic.COMPANY_ID) = -1, 0, tdc.DIRECT_S2_TOTAL) 		AS DIRECT_S2_TOTAL
	, tic.INDIRECT_PEX
	, tic.INDIRECT_S1
	, tic.INDIRECT_S2
	, tic.INDIRECT_MISC
FROM DIRECT_REVENUE	dr
FULL JOIN TOTAL_DIRECT_COSTS 	tdc USING (DATE_KEY, COMPANY_ID)
FULL JOIN TOTAL_INDIRECT_COSTS 	tic USING (DATE_KEY, COMPANY_ID)
LEFT JOIN {{ ref('core_dim_company') }} CDC ON  COALESCE(dr.COMPANY_ID, tdc.COMPANY_ID, tic.COMPANY_ID) = CDC.COMPANY_ID
WHERE (
		dr.RECURRING_REVENUE            	> 0
		OR dr.NONRECURRING_REVENUE      	> 0
		or  tdc.DIRECT_PEX_COSTS 			< 0
		or  tdc.DIRECT_S2_TOTAL				< 0
		or  tic.INDIRECT_PEX 				< 0
		or  tic.INDIRECT_S1 				< 0
		or  tic.INDIRECT_S2 				< 0
		or  tic.INDIRECT_MISC    			< 0
		)
	AND COALESCE(dr.DATE_KEY, tdc.DATE_KEY, tic.DATE_KEY)  >= '2021-08-01'
